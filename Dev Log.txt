Dev Log


Sunday 22/12/2024
-GitHub repo set up 
-First iteration of mouse down-drag-up shoot
-Added a scaling parameter for shot strength 
-Hotspot implemented but not visible yet
-Things to implement: visible hotspot, aim line, cancel shot if mouse drag is short.


Tuesday 24/12/2024
-Experimenting with drawing aim lime
-Tried GL and Line Renderer clases in Unity
-Tried attaching scripts for rendering aim line to camera and
ball both unsuccessfully

Wednesday 25/12/2024
-Managed to implement a working aim line with Line Renderer class
-Expanded Ball prefab with aim line renderer and script for control

Thursday 26/12/2024
-Found aim line not drawing as intended, check vector algebra for possible fix
-Implemented Hole prefab with script to check for ball collision and ball stopping within it.
-Added condition to be unable to shoot ball while moving.

Sunday 12/01/2025
-Long break due to midterms, will have to catch up during following week 
-Ideally get basic implementation on gravity pull with magnitude and distance factors 
-Create game managers. Sound and scene managers are still not needed. Game manager should keep track of
shots taken and time. 

Monday 13/01/2025
-Basic implementation of planets gravity field and small planet game object with magnitude control variable
and gravitational pull based on distance from planet when ball within the gravity field.
-Had to damp distance factor in gravity pull due to working with small distances in the project
-Found bouncing ball bug where ball would not stop bouncing in the surface of the planet

Wednesday 15/01/2025
-Solved bouncing ball bug buy adding physics material to planet rigid body and tweaking the bounciness parameter
-Added gravity field to "Ignore ray cast" layer so player can once again click on ball hotspot and shoot the ball once its stopped
-Still missing to implement: Check for ball stopping inside a planet and not outer space
			     Change ball linear drag when inside gravity field to X value and back to 0 in outer space
			     
Thursday 16/01/2025
-Implemented sound manager 
-Gravity code not working as intended, pull magnitude not varying might have to refactor the code

Monday 20/01/2025
-Implemented controllers as singletons
-Created another branch to keep working on Gravity field code that needed to be re done. Need surged from not being able to figure out bug which set the pull magnitude variable value to 1000 and could not be changed through inspector.

Wednesday 22/01/25
-Found out gravity bug was caused by duplicated gravity field script on prefab. After removal it is working as intended.
-Tweaked some parameters to get a better feel while playing but still far from ideal

Friday 24/01/2025
-Look into tile sets and decided against using it for the project
-Got a couple of background images and some sprites to start experimenting them on planets
-Re-made Planet prefab for better general use
-Will experiment with a black background a Unity particle system to create space effect for better style coherence.

Saturday 25/01/2025
-Managed to get a working scrolling background image
-Also added sprite for indicating pulsing gravity field. Might want to experiment with particle system next.

Sunday 26/01/2025
-Added selection of BGM to test during next weeks
-Added selection of SFX to test during next weeks

Monday 27/01/2025
-Completed a usable and easily scalable implementation of the Sound Controller for playing sounds in game
-Changed the aim line to a slimmer white triangle.
-Made a priority lists of assets and features needed and their priority.
-Plan for following days: Implement basic features required for user testing
	-Ball destroyed and respawned when going out of camera view.
	-Hole sprite
	-Map gravity field pull to half its strength on the outside since using the square of the distance makes it
         unnoticeable when ball is on the outer zone of the edge and increasing pull magnitude will make it hard to shoot
	planet surface.

06/01/2025
- Zero development in previous days because of catching up with other modules taken.
- Had a power blackout from 5 PM to 5 AM on different parts of the city due to a storm.

08/02/2025
-First re mapping of gravity force pull magnitude for better control of magnitude based on distance to the planet 
-Out of bounds detection and ball reset position first implementation. Possible improvements:
	-Particles to indicate ball back into position.

09/02/2025
-Implemented scene manager to load persistent game elements and first level for playtest1
-Made adjustments to ball shot parameters for better control of shot strength

14/02/2025
-Built level for playtest1
-Added yellow planet variant and placeholder sprite for hole
-Also added temporary ball respawn on hole enter for smoother playtest.

16/02/2025
-Finished playtest1 build
-Finished Questionnaire for gathering feedback on playtest1 : https://forms.gle/wvz1Ri67WoTN3vR9A
-Created rudimentary starter menu UI and started looking into Unity canvas for further UI development
-Published first build in Unity Play : https://play.unity.com/en/games/b75e2ae8-b66e-4f2f-883d-f4863b445548/grolfvity-playtest-1

17/02/2025
-Sent first playtest1 iteration with feedback gathering form to close friends 

23/02/2025
-Compiled playtest1 feedback obtained during the week.
-Updated final report with the insight from first playtest
-Decided to try two new gravity implementation, play with planet atmosphere friction, faster ball, bigger gravity fields
-Planets need to feel more different

01/03/2025
-Moved initial ball position update to mouse drag from mouse down to fix bug.
-Added logic to render hotspot around ball when player is able to shoot. Should be easily adaptable when changing to animation
-Implemented ball state machine for better code readability and easier maintenance.

02/03/2025
-Re factored game controller to keep track of game state and flow
-Ball not starting paused for some reason after change needs Fix ASAP
-Current implementation probably over complicated for game scope with 4 states. Might need only 2-3

03/03/2025
-Fixed game Controller bug that caused game not starting paused.
-Initial new implementation of game controller done. Time to start addressing Playtest1 feedback
-Already reduced friction a little bit and increased shot strength.
-Next change is increasing gravity field radius of all planets by 1.5x
-Changed camera size 1.5x
-Created new prefabs to compare from previous playtest iteration
-Changed scale of gravity fields by 1.25x.
-Previous attempt with 1.5x felt like too much.

04/03/2025
-Started building playtest 2 build
-Cleaned up unused code in PlanetForces.cs
-Deleted BallOutOfBounds.cs since its implemented inside BallBehaviour.cs
-Refactored PlanetForces.cs so attraction only happens when ball is moving
-Changed Blue planet scale=1, hitbox=1, field=1.5
-Changed Yellow planet scale=1, hitbox=2.25, field=3
-Ball speed cap increased to 45
-Added Hole tag just for testing with multiple holes per level during playtest2

06/03/2025
-Added Black hole element that destroys ball on contact and has a big area and big attraction force
-Black hole force parameters: 
	Field pull mag = 5000 // Dist cap = 4.5  
	Event Horizon pull mag = 6000 // Dist cap = 1.2
-Adapted PlanerForces.cs to work with Black holes
-Added ball interaction with Black hole to BallBheavior.cs
-Revmoed Playtest1 introduction text
-Split old canvas into Background Canvas and Menu Canvas
-Changed Ball speed cap to 47 from 45
-Blue planet field scale up to 1.75 from 1.5
-Yellow planet Pull mag up to 3000 from 2500, Dist cap up to 5.5 from 5
-Ball shoot multiplier up to 3.9 from 3.7
-Tied load, reload an unload functionality to Game states and ball entering each level exit

